# .github/workflows/terraform.yml

name: Terraform CI

# ‚öíÔ∏è Se ejecuta en cada push a main o de forma manual
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      tf_action:
        description: 'Acci√≥n a ejecutar con Terraform'
        required: true
        default: 'apply'
        type: choice
        options:
          - apply
          - destroy
      environment:
        description: 'Entorno de despliegue'
        required: true
        default: 'dev'
        type: choice
        options:
          - production
          - staging
          - dev

jobs:

  # ‚úÖ JOB 1: Revisar formato del c√≥digo
  format:
    name: ‚úÖ Terraform Format
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment || 'dev' }}-plan

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.11.3

      - name: Run terraform fmt
        run: terraform fmt -check


  # üîç JOB 2: Validaci√≥n
  validate:
    name: üîç Terraform Validate
    needs: format
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment || 'dev' }}-plan

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # - name: Debug AWS vars
      #   run: |
      #     echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}"
      #     echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}"
      #     echo "environment=${{ inputs.environment }}"
      
      # - name: Configure AWS credentials   # ‚Üê Nuevo paso
      #   uses: aws-actions/configure-aws-credentials@v4
      #   with:
      #     aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     aws-region:            us-east-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.11.3

      - name: Terraform Init
        run: terraform init

      - name: Terraform Validate
        run: terraform validate


  # üìÇ JOB 3: Generar plan
  plan:
    name: üìÇ Terraform Plan
    needs: validate
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment || 'dev' }}-plan

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.11.3

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        run: terraform plan -no-color > plan_output.txt

      - name: Subir resultado del plan como artefacto
        uses: actions/upload-artifact@v4
        with:
          name: terraform-plan
          path: plan_output.txt

      - name: Mostrar resumen del plan
        run: cat plan_output.txt >> $GITHUB_STEP_SUMMARY


  # üöÄ JOB 4: Apply con aprobaci√≥n manual
  terraform-apply:
    name: üöÄ Terraform Apply
    needs: plan
    if: ${{ github.event.inputs.tf_action == 'apply' }}
    runs-on: ubuntu-latest
    environment:
      name: dev
      url: https://github.com/prisciflores/terraform-eks-poc/actions

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.11.3

      - name: Terraform Init
        run: terraform init

      - name: Terraform Apply
        run: terraform apply -auto-approve


  # ‚ö†Ô∏è JOB 5: Destroy con aprobaci√≥n manual
  terraform-destroy:
    name: ‚ö†Ô∏è Terraform Destroy
    needs: plan
    if: ${{ github.event.inputs.tf_action == 'destroy' }}
    runs-on: ubuntu-latest
    environment:
      name: dev
      url: https://github.com/prisciflores/terraform-eks-poc/actions

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.11.3

      - name: Terraform Init
        run: terraform init

      - name: Terraform Destroy
        run: terraform destroy -auto-approve
